@page "/rsp"
@using System.Timers;
@implements IDisposable
@using BlazorApp1.Helpers

<div class="row text-center">
    <div class="col">
        <h1 class="text-success">RSP minigame</h1>
    </div>
</div>

<div class="row text-center">
    <div class="col mb-5 justify-content-center">
        <img src="@oppenent.Image" class="general-image" />
    </div>
</div>

<div class="row text-center">
    <div class="col mb-5 justify-content-center">
        <button class="btn btn-primary">Start new game</button>
    </div>
</div>

<div class="row text-center justify-content-around">
    @foreach (var item in games)
    {
        <div class="col">
            <img src="@item.Image" class="general-image hovered-image" />
        </div>
    }
</div>

@code {
    List<GameHandler> games = new List<GameHandler>()
    {
        new GameHandler {
            Choose = RSPOptions.Paper,
            LooseCondition = RSPOptions.Scissors,
            WinCondition = RSPOptions.Rock,
            Image = "https://img2.freepng.ru/20171218/d09/hands-png-hand-image-free-5a3850e416c089.5453131415136401640932.jpg"
        },
        new GameHandler {
            Choose = RSPOptions.Rock,
            LooseCondition = RSPOptions.Paper,
            WinCondition = RSPOptions.Scissors,
            Image = "https://cdn.pixabay.com/photo/2014/03/25/15/26/rock-paper-scissors-296854_960_720.png"
        },
        new GameHandler {
            Choose = RSPOptions.Scissors,
            LooseCondition = RSPOptions.Rock,
            WinCondition = RSPOptions.Paper,
            Image = "https://cdn.pixabay.com/photo/2014/03/25/15/26/rock-paper-scissors-296853_960_720.png"
        },
    };

    Timer timer;
    GameHandler oppenent;
    Random rnd;

    protected override void OnInitialized()
    {
        oppenent = games[0];
        rnd = new Random(DateTime.Now.Millisecond);

        timer = new Timer();
        timer.Interval = 100;
        timer.Elapsed += ElapsedTimer;
        timer.Start();
    }

    int imageIndex = 0;
    async void ElapsedTimer(object sender, ElapsedEventArgs args)
    {
        imageIndex = rnd.Next(0, games.Count);
        oppenent = games[imageIndex];
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        if (timer != null)
            timer.Dispose();
    }
}

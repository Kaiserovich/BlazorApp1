@if (Game != null)
{
    @if (!IsTable)
    {
        <div class="row text-center alert alert-info">
            <div class="col">
                <p>@Game.Name</p>
                <p>@Game.Genre</p>
                <p>@Game.ReleaseDate.ToString("dd.MM.yyyy")</p>
                @if (Game.Name.Equals("The Wither") && AppStyle.WitcherWords != null)
                {
                    <div class="row mt-3">
                        <div class="col altert alert-light text-center">
                            @AppStyle.WitcherWords[rnd.Next(0,AppStyle.WitcherWords.Count)]
                        </div>
                    </div>
                }
                @if (DisplayButtons)
                {
                    <div class="row">
                        <div class="col">
                            <button class="btn btn-primary" @onclick="SwitchGame">Switch the Game</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <tr>
            <td>@Game.Name</td>
            <td>@Game.Genre</td>
            <td>@Game.ReleaseDate.ToString("dd.MM.yyyy")</td>
            <td>
                @if (DisplayButtons)
                {
                    <button class="btn btn-danger" @onclick="(() => DeleteGame.InvokeAsync(Game))">Delete</button>
                }
            </td>
        </tr>
    }
}
@code {
    [Parameter] public Game Game { get; set; }
    [Parameter] public bool IsTable { get; set; }

    [Parameter] public bool DisplayButtons { get; set; } = false;
    [Parameter] public EventCallback<Game> DeleteGame { get; set; }
    [Parameter] public EventCallback SwitchGame { get; set; }

    [CascadingParameter] public AppStyle AppStyle { get; set; }
    Random rnd = new Random(DateTime.Now.Millisecond);

}